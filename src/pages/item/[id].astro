---
import ItemLayout from "@layouts/ItemLayout.astro";
import Item from "@components/Item.astro";
import Story from "@components/Story.astro";

const { id } = Astro.params;

interface Comment {
  id: number;
  text: string;
  by: string;
  time: number;
  score: number;
  kids?: Comment[];
}

const getPostComments = async (postId: number) => {
  const response = await fetch(`${import.meta.env.HN_API}/item/${postId}.json`);
  const post = await response.json();

  // Return directly, it will redirect if the data is undefined.
  if (!post) return;

  const commentIds = post.kids || [];
  const comments = await Promise.all(commentIds.map((id: any) => getComment(id)));

  const kids = comments.filter((comment) => comment) as Comment[];
  post.kids = kids;

  return post;
};

const getComment = async (commentId: number) => {
  const response = await fetch(`${import.meta.env.HN_API}/item/${commentId}.json`);
  const comment = await response.json();

  if (!comment || comment.deleted || comment.dead) {
    return null;
  }

  const nestedCommentIds = comment.kids || [];
  const nestedComments = await Promise.all(nestedCommentIds.map((id: any) => getComment(id)));

  return {
    id: comment.id,
    text: comment.text,
    by: comment.by,
    time: comment.time,
    score: comment.score,
    kids: nestedComments.filter((comment) => comment) as Comment[],
  };
};

const data = await getPostComments(Number(id));
if (!data) return Astro.redirect("/404");
---

<ItemLayout title={data.title ? data.title : `Item ${data.id}`} description={data.text}>
  {data.type == "story" ? <Story data={data} /> : <Item data={data} />}
</ItemLayout>
